server:
  port: 443
  ssl:
    enabled: true
    key-store: /etc/mindecrire/ssl/keystore.p12
    key-store-password:
    keyStoreType: PKCS12
    keyAlias: mindecrire
  tomcat.mbeanregistry.enabled: true

spring:
  freemarker:
    template-loader-path: classpath:/mindecrire_templates,classpath:/templates
    suffix: .ftlh
    settings.template_exception_handler: rethrow
  datasource:
    platform: postgres
    username: postgres
    password: postgres
  jpa.properties.hibernate:
    dialect: org.hibernate.dialect.PostgreSQLDialect
    jdbc.lob.non_contextual_creation: true
  servlet.multipart:
    max-file-size: 10MB
  security.oauth2.client.registration:
    github.provider: github
  profiles.active: native
  cloud.config.server:
    prefix: config
    git.uri: file://etc/mindecrire/config/config-repo
  flyway.locations: classpath:sql
  jmx.server: mBeanServer

friendly-ssl:
  certificate-key-alias: mindecrire
  account-private-key-file: /etc/mindecrire/ssl/account.pem
  keystore-file: /etc/mindecrire/ssl/keystore.p12
  terms-of-service-file: /etc/mindecrire/ssl/tos
  endpoints-include: certificate, tos

management.endpoints.web.exposure.include: refresh

# In consumer, copy below (and overwrite any above as needed) into src/main/resources/application.yml
# and enter project-specific information:
#
#  spring:
#    jpa.properties.hibernate.default_schema: application
#    security.oauth2.client.registration.github.client-id: x
#
#  objectStorage:
#    imageBucket:
#      name: images
#      url: https://storage.fake.com
#      region: nyc3
#
#  site.url: https://yoursite.com
#
#  userAuthorization.userPermissions:
#    username: ADMIN, POST_ADMIN, POST_ADD, POST_EDIT, POST_UPDATE

# Static pages can be added by creating a markdown (.md) file in src/main/resources/static/markdown and
# adding the filename without the extension as the key and title to display on the page as the value:
#
#  staticContent.markdownToName:
#    projects: My Projects
#    about: About

# In production, copy below into production.yml in the project root directory and enter secrets:
#
#  spring:
#    datasource:
#      url: x
#      username: x
#      password: x
#    security.oauth2.client.registration.github.client-secret: x
#
#  objectStorage:
#    imageBucket:
#      accessKeyId: x
#      secretAccessKey: x
#
#  spring.profiles.include:
#    - ssl-redirect
